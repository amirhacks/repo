if [[ $EUID -ne 0 ]]; then
   echo "Theos Installer must be run as root" 
   exit 1
fi

if [ ! $# -eq 1 ] && [ ! $# -eq 2 ]; then
    echo "Usage: theosinstaller <desired_sdk or "no_sdk" > <arguments>"
    echo "    Arguments:"
    echo "       -v: verbose mode"
else 

if [[ $1 == "no_sdk" ]]; then
    string=""
    if [ -d /var/theos/sdks/*.sdk ]; then
        echo "Keeping current sdk"
        mkdir /tmp/THEOS_SDK_TEMP
        mv /var/theos/sdks/*.sdk /tmp/THEOS_SDK_TEMP
    fi
else
    string=$( curl -k https://jakeashacks.net/sdks.php?sdk=$1 2> /dev/null )
fi

if [[ $string == "SDK not supported"* ]]; then
    echo $string;
else

    rm -rf /var/theos > /dev/null 2>&1
    echo "Downloading theos..."
    cd /var

    if [[ "$2" == "-v" ]]; then
        git clone git://github.com/theos/theos
    else
        git clone git://github.com/theos/theos > /dev/null 2>&1
    fi

    cd /var/theos

    if [[ "$2" == "-v" ]]; then
        git submodule init
    else
        git submodule init > /dev/null 2>&1
    fi

    for cc in $(find /var/theos/ -name "config")
    do
        sed -i -e 's/https:\/\//git:\/\//g' $cc
        sed -i -e 's/http:\/\//git:\/\//g' $cc
    done

    if [[ "$2" == "-v" ]]; then
        git submodule update
    else
        git submodule update > /dev/null 2>&1
    fi

    if [[ "$2" == "-v" ]]; then
        git submodule foreach git pull origin master
    else
        git submodule foreach git pull origin master > /dev/null 2>&1
    fi

    cd /var/theos/vendor/include

    if [[ "$2" == "-v" ]]; then
        git submodule init
    else
        git submodule init > /dev/null 2>&1
    fi

    for cc in $(find /var/theos/ -name "config")
    do
        sed -i -e 's/https:\/\//git:\/\//g' $cc
        sed -i -e 's/http:\/\//git:\/\//g' $cc
    done

    if [[ "$2" == "-v" ]]; then
        git submodule update
    else
        git submodule update > /dev/null 2>&1
    fi

    if [[ "$2" == "-v" ]]; then
        git submodule foreach git pull origin master
    else
        git submodule foreach git pull origin master > /dev/null 2>&1
    fi

    rm -rf /var/theos/vendor/include/rocketbootstrap/LightMessaging
    ln -sf /var/theos/vendor/include/LightMessaging /var/theos/vendor/include/rocketbootstrap/LightMessaging

    echo '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict><key>platform-application</key><true/><key>com.apple.private.skip-library-validation</key><true/><key>com.apple.private.security.no-container</key><true/></dict></plist>' > /var/theos/entitlements.xml

    if [ -f /usr/share/jailbreak/signcert.p12 ]; then
        sed -i -e 's/TARGET_CODESIGN_FLAGS ?= -S/TARGET_CODESIGN_FLAGS ?= -P -K\/usr\/share\/jailbreak\/signcert.p12 -S\/var\/theos\/entitlements.xml/g' /var/theos/makefiles/targets/_common/darwin_head.mk
    else
        sed -i -e 's/TARGET_CODESIGN_FLAGS ?= -S/TARGET_CODESIGN_FLAGS ?= -S\/var\/theos\/entitlements.xml/g' /var/theos/makefiles/targets/_common/darwin_head.mk
    fi

    rm -rf /var/theos/lib
    rm -rf /var/theos/include
    ln -sf /var/theos/vendor/lib /var/theos/lib
    ln -sf /var/theos/vendor/include /var/theos/include

    if [[ -f /usr/lib/libsubstrate.dylib ]]; then cp /usr/lib/libsubstrate.dylib /var/theos/lib/libsubstrate.dylib; fi
    if [[ -f /usr/include/substrate.h ]]; then cp /usr/include/substrate.h /var/theos/include/substrate.h; fi

    if [[ $1 == "no_sdk" ]]; then
        if [[ -d /tmp/THEOS_SDK_TEMP ]]; then
            mv /tmp/THEOS_SDK_TEMP/*.sdk /var/theos/sdks
            rm -rf /tmp/THEOS_SDK_TEMP
        fi
    else
        echo "Downloading SDK..."
        cd /var/theos/sdks

        if [[ "$2" == "-v" ]]; then
            curl -O $string
        else
            curl -O $string > /dev/null
        fi
        echo "Extracting SDK..."

        if [[ "$2" == "-v" ]]; then
            unzip *.zip
        else
            unzip *.zip > /dev/null
        fi
        rm -rf *.zip
    fi

    if [ -s /var/theos/sdks/*.sdk ]; then
        echo "Adding arm64e support"
        for i in /var/theos/sdks/*.sdk/System/Library/Frameworks/*.framework/*.tbd; do
            [ -f "$i" ] || continue
            if [[ $(grep "arm64e" $i) == "" ]]; then
                sed -i -e 's/arm64/arm64, arm64e/g' $i
            fi
        done

        for i in /var/theos/sdks/*.sdk/System/Library/PrivateFrameworks/*.framework/*.tbd; do
            [ -f "$i" ] || continue
            if [[ $(grep "arm64e" $i) == "" ]]; then
                sed -i -e 's/arm64/arm64, arm64e/g' $i
            fi
        done
    fi

    echo "Done :)"
fi
fi